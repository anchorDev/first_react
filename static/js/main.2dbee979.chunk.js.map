{"version":3,"sources":["components/header/header.js","components/form-field/form-field.js","components/personal-data/personal-data-list.js","components/personal-data/personal-data.js","components/skill-set/skill-set-list.js","components/check-box-field/check-box-field.js","components/skill-set/skill-set.js","components/js-level/js-level.js","components/about-me/about-me.js","components/plans-container/plans-container-list.js","components/radio-btn-field/radio-btn-field.js","components/plans-container/plans-container.js","components/form/form.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","FormField","htmlFor","this","props","fieldData","id","name","type","defaultValue","value","personalData","PersonalData","concat","personalDataList","map","item","index","form_field_form_field","key","SkillSetData","title","url","url_name","CheckBoxField","linkElement","checkBoxData","href","defaultChecked","undefined","SkillSet","SkillSetList","check_box_field_check_box_field","JSLevel","min","max","AboutMe","aboutMe","PlansContainerList","plan","RadioBtnField","PlansContainer","radio_btn_field_radio_btn_field","date","Form","personal_data","skill_set_skill_set","js_level_js_level","about_me_about_me","plans_container_plans_container","App","header_header","components_form_form","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dbee979.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.scss'\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"page__header header\">\n                <div className=\"header__logo\"/>\n                <div className=\"header__stamp\"/>\n                <div className=\"header__title-img\"/>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './form-field.scss';\n\nclass FormField extends Component {\n    render() {\n        return (\n            <div className=\"form-field\">\n                <label htmlFor={this.props.fieldData.id} className=\"form-field__lable\">{this.props.fieldData.name}</label>\n                <input type={this.props.fieldData.type} id={this.props.fieldData.id} defaultValue={this.props.fieldData.value} className=\"form-field__input\"/>\n            </div>\n        );\n    }\n}\n\nexport default FormField;\n","const personalData = [\n  {\n    name: \"Полное ФИО\",\n    type: \"text\",\n    value: \"Даниил Шушанян Владимирович\",\n    id: \"fullName\"\n  },\n  {\n    name: \"Год рождения\",\n    type: \"text\",\n    value: \"1994\",\n    id: \"dateOfBirth\"\n  },\n  {\n    name: \"Место жительства\",\n    type: \"text\",\n    value: \"г. Ереван, Армения\",\n    id: \"placeOfBirth\"\n  },\n  {\n    name: \"Скайп\",\n    type: \"text\",\n    value: \"danielshushanyan\",\n    id: \"skype\"\n  },\n  {\n    name: \"Почта\",\n    type: \"email\",\n    value: \"shushanyandaniel@gmail.com\",\n    id: \"email\"\n  }\n];\n\nexport default personalData;\n","import React, { Component } from 'react';\nimport FormField from '../form-field/form-field';\nimport personalDataList from './personal-data-list';\n\nclass PersonalData extends Component {\n    render() {\n        return (\n            <div className={`personal-data ${this.props.className}`}>\n                {\n                    personalDataList.map((item, index) => {\n                        return <FormField fieldData={item} key={index} />\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default PersonalData;\n","const SkillSetData = [\n    [\n        {\n            title: 'БЭМ/OOCSS',\n            value: true\n        },\n        {\n            title: 'Pug (Jade)',\n            value: true\n        },\n        {\n            title: 'Stylus/LESS/SASS',\n            value: true\n        },\n        {\n            title: 'Работаю с SVG',\n            value: true\n        },\n        {\n            title: 'Верстаю семантично',\n            value: true\n        },\n        {\n            title: 'Accessibility (A11Y)',\n            value: false\n        },\n        {\n            title: 'ES2015/ES2016',\n            value: true\n        }\n    ],\n    [\n        {\n            title: 'Gulp/GRUNT',\n            value: true\n        },\n        {\n            title: 'Webpack',\n            value: true\n        },\n        {\n            title: 'Дружу с WebGL',\n            value: false\n        },\n        {\n            title: 'jQuery',\n            value: true\n        },\n        {\n            title: 'Знаю/изучаю Angular',\n            value: true\n        },\n        {\n            title: 'Знаю/изучаю React',\n            value: true\n        },\n        {\n            title: 'Знаю/изучаю Node.js',\n            value: false\n        }\n    ],\n    [\n        {\n            title: 'Использую Git',\n            value: true\n        },\n        {\n            title: 'С глазомером всё ок',\n            value: true\n        },\n        {\n            title: 'Читаю ',\n            value: false,\n            url: 'http://blog.csssr.ru/',\n            url_name: 'blog.csssr.ru'\n        },\n        {\n            title: 'Я ленивый(-ая)',\n            value: false\n        },\n        {\n            title: 'У меня хороший английский',\n            value: false\n        },\n    ]\n];\n\nexport default SkillSetData;\n","import React, { Component } from 'react';\nimport './check-box-field.scss';\n\n\nclass CheckBoxField extends Component {\n    render() {\n        let linkElement = '';\n\n        if (this.props.checkBoxData.url) {\n            linkElement = <a href={ this.props.checkBoxData.url }>{ this.props.checkBoxData.url_name }</a>\n        }\n\n        return (\n            <label className={`check-box-field ${this.props.className}`}>\n                { this.props.checkBoxData.title }\n                { linkElement }\n                <input\n                    type=\"checkbox\"\n                    defaultChecked={ this.props.checkBoxData.value === true ? 'checked' : undefined }\n                    className=\"check-box-field__input\"/>\n                <span className=\"check-box-field__checkmark\"/>\n            </label>\n        );\n    }\n}\n\nexport default CheckBoxField;\n","import React, { Component } from 'react';\nimport './skill-set.scss';\nimport SkillSetList from './skill-set-list';\nimport CheckBoxField from '../check-box-field/check-box-field';\n\nclass SkillSet extends Component {\n    render() {\n        return (\n            <div className={`skill-set ${ this.props.className }`}>\n                <div className=\"skill-set__col\">\n                    {\n                        SkillSetList[0].map((item, index) => {\n                            return <CheckBoxField checkBoxData={item} key={index} className=\"skill-set__check-box-field\" />\n                        })\n                    }\n                </div>\n                <div className=\"skill-set__col skill-set__col_middle\">\n                    {\n                        SkillSetList[1].map((item, index) => {\n                            return <CheckBoxField checkBoxData={item} key={index} className=\"skill-set__check-box-field\" />\n                        })\n                    }\n                </div>\n                <div className=\"skill-set__col skill-set__col_last\">\n                    {\n                        SkillSetList[2].map((item, index) => {\n                            return <CheckBoxField checkBoxData={item} key={index} className=\"skill-set__check-box-field\" />\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SkillSet;\n","import React, { Component } from 'react';\nimport './js-level.scss';\n\nclass JSLevel extends Component {\n    render() {\n        return (\n            <div className={`js-level ${this.props.className}`}>\n                <h3 className=\"js-level__title\"> Уровень владения JavaScript</h3>\n                <div className=\"js-level__wrapper\">\n                    <input\n                        type=\"range\"\n                        min=\"1\"\n                        max=\"100\"\n                        defaultValue=\"48\"\n                        className=\"js-level__slider\"\n                    />\n                    <p className=\"js-level__option\">Не владею</p>\n                    <p className=\"js-level__option js-level__option_midle\">Использую готовые решения</p>\n                    <p className=\"js-level__option js-level__option_midle js-level__option_text-overflow\">Использую готовые решения  и умею их переделывать</p>\n                    <p className=\"js-level__option js-level__option_text-right\">Пишу сложный JS с нуля</p>\n                    <div className=\"js-level__clearfix\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default JSLevel;\n","import React, { Component } from 'react';\nimport './about-me.scss';\n\n\nclass AboutMe extends Component {\n    render() {\n        return (\n            <div className={`about-me ${this.props.className}`}>\n                <textarea className=\"about-me__textarea\" name=\"about-me\" id=\"about-me\" defaultValue={this.props.aboutMe} />\n            </div>\n        );\n    }\n}\n\nexport default AboutMe;\n","const PlansContainerList = [\n    {\n        plan: 'Верстать',\n        value: false,\n        name: 'plans'\n    },\n    {\n        plan: 'Прокачиваться в JS',\n        value: true,\n        name: 'plans'\n    },\n    {\n        plan: 'Менеджерство',\n        value: false,\n        name: 'plans'\n    },\n    {\n        plan: 'Другое',\n        value: false,\n        name: 'plans'\n    },\n];\n\nexport default PlansContainerList;\n","import React, { Component } from 'react';\nimport './radio-btn-field.scss';\n\nclass RadioBtnField extends Component {\n    render() {\n        return (\n            <label className={`radio-btn-field ${this.props.className}`}>\n                { this.props.checkBoxData.plan }\n                <input\n                    type=\"radio\"\n                    name={ this.props.checkBoxData.name }\n                    defaultChecked={ this.props.checkBoxData.value === true ? 'checked' : undefined }\n                    className=\"radio-btn-field__input\"/>\n                <span className=\"radio-btn-field__checkmark\"/>\n            </label>\n        );\n    }\n}\n\nexport default RadioBtnField;\n","import React, { Component } from 'react';\nimport './plans-container.scss';\nimport PlansContainerList from './plans-container-list';\nimport RadioBtnField from \"../radio-btn-field/radio-btn-field\";\n\n\nclass PlansContainer extends Component {\n    render() {\n        return (\n            <div className={`plans-contianer ${this.props.className}`}>\n                {\n                    PlansContainerList.map((item, index) => {\n                        return <RadioBtnField\n                            className=\"plans-contianer__radio-btn\"\n                            checkBoxData={item}\n                            key={index}\n                        />\n                    })\n                }\n            </div>\n        );\n    }\n}\n\nexport default PlansContainer;\n","import React, { Component } from 'react';\nimport './form.scss';\nimport PersonalData from '../personal-data/personal-data';\nimport SkillSet from '../skill-set/skill-set';\nimport JSLevel from \"../js-level/js-level\";\nimport AboutMe from \"../about-me/about-me\";\nimport PlansContainer from \"../plans-container/plans-container\";\nimport FormField from \"../form-field/form-field\";\n\nconst date = {\n    name: 'Дата заполнения',\n    type: 'text',\n    value: '07.18.19',\n    id: \"date\"\n};\n\nclass Form extends Component {\n    render() {\n        return (\n            <form className=\"form\">\n                <PersonalData className=\"form__personal-data\" />\n                <h3 className=\"form__about\">Расскажите о себе чекбоксами</h3>\n                <p className=\"form__about-text\">\n                    Отметьте чекбоксами пункты, которые соответствуют вашим скиллам. Кстати, отсутствие опыта не означает,\n                    что у вас меньше шансов стать одним из наших товарищей.\n                    Это означает, что вы будете получать те задачи, с которыми гарантировано будете справляться.\n                </p>\n                <SkillSet className=\"form__skill-set\" />\n                <JSLevel className=\"form__js-level\" />\n                <h3 className=\"form__about form__about_gutter\">Расскажите о себе словами</h3>\n                <p className=\"form__about-text\">\n                    Напишите пару предложений, чем вас привлекла наша вакансия и чего вы ожидаете от работы в CSSSR.\n                    Кстати, будет здорово, если при нехватке места для текста строки будут добавляться автоматически.\n                </p>\n                <AboutMe\n                    className=\"form__about-me\"\n                    aboutMe=\"Привлекло то что у вас профессиональный подход ко всему, начиная со сборщика заканчивая с блога. Ожидаю много интересных задач и главное подучится много новому.\"\n                />\n                <h3 className=\"form__about\">Какие у вас планы на будущее?</h3>\n                <p className=\"form__about-text\">Этот ответ ни на что не повлияет. Не беда, если в будущем ваши планы поменяются.</p>\n                <PlansContainer className=\"form__plans-contianer\"/>\n                <div className=\"form__date\">\n                    <FormField fieldData={date} />\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/header';\nimport Form from './components/form/form';\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <div className=\"page__wrapper\">\n          <Header className=\"page__header\"/>\n          <Form className=\"page__form\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}